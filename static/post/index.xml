<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Garrett&#39;s Blog</title>
    <link>https://gsquire.github.io/static/post/</link>
    <description>Recent content in Posts on Garrett&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 17 May 2020 10:57:01 -0700</lastBuildDate>
    
	<atom:link href="https://gsquire.github.io/static/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>A Brief Exploration of Zig</title>
      <link>https://gsquire.github.io/static/post/a-brief-exploration-of-zig/</link>
      <pubDate>Sun, 17 May 2020 10:57:01 -0700</pubDate>
      
      <guid>https://gsquire.github.io/static/post/a-brief-exploration-of-zig/</guid>
      <description>Why Zig? Zig is an intriguing new language that aims to fill a niche in the low-level development world. It offers a syntax that looks like a derivative of C along with some exciting features that make it an appealing modern alternative.</description>
    </item>
    
    <item>
      <title>A Rusty Go at Channels</title>
      <link>https://gsquire.github.io/static/post/a-rusty-go-at-channels/</link>
      <pubDate>Sun, 24 Jun 2018 10:44:31 -0700</pubDate>
      
      <guid>https://gsquire.github.io/static/post/a-rusty-go-at-channels/</guid>
      <description>Channels Channels are a useful concurrency primitive that enable separate processes to safely communicate without the need for explicit synchronization. The term processes is used here to loosely describe independent threads of execution within a program.</description>
    </item>
    
    <item>
      <title>Rust Redis Modules</title>
      <link>https://gsquire.github.io/static/post/rust-redis-modules/</link>
      <pubDate>Sun, 21 Jan 2018 19:23:57 -0800</pubDate>
      
      <guid>https://gsquire.github.io/static/post/rust-redis-modules/</guid>
      <description>Redis Modules with Rust With newer versions of Redis, the modules API lets users extend Redis&amp;rsquo; already powerful functionality. To quote the Redis website:</description>
    </item>
    
    <item>
      <title>Rust In 2018</title>
      <link>https://gsquire.github.io/static/post/rust-in-2018/</link>
      <pubDate>Wed, 10 Jan 2018 19:05:55 -0800</pubDate>
      
      <guid>https://gsquire.github.io/static/post/rust-in-2018/</guid>
      <description>Rust in 2018 This short post is a reflection on Rust in 2017 and some ideas I would love to see in 2018 written in the spirit of this blog post.</description>
    </item>
    
    <item>
      <title>Cleaner Go</title>
      <link>https://gsquire.github.io/static/post/cleaner-go/</link>
      <pubDate>Mon, 06 Mar 2017 14:30:42 -0800</pubDate>
      
      <guid>https://gsquire.github.io/static/post/cleaner-go/</guid>
      <description>Large code bases can become increasingly complex to manage as you add more code while also refactoring what is there already.</description>
    </item>
    
    <item>
      <title>REST in Rust</title>
      <link>https://gsquire.github.io/static/post/rest-in-rust/</link>
      <pubDate>Tue, 14 Jun 2016 14:56:18 -0700</pubDate>
      
      <guid>https://gsquire.github.io/static/post/rest-in-rust/</guid>
      <description>Writing a simple REST app in Rust If you have ever worked with HTTP in Rust, you have probably referred to the hyper crate.</description>
    </item>
    
  </channel>
</rss>