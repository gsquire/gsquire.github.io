var searchIndex = {};
searchIndex["reroute"] = {"doc":"","items":[[3,"RouteInfo","reroute","",null,null],[3,"Router","","The Router struct contains the information for your app to route requests\nproperly based on their HTTP method and matching route. It allows the use\nof a custom 404 handler if desired but provides a default as well.",null,null],[12,"not_found","","A custom 404 handler that you can provide.",0,null],[6,"Captures","","",null,null],[6,"NotFoundFn","","",null,null],[11,"hash","","",1,null],[11,"eq","","",1,{"inputs":[{"name":"routeinfo"},{"name":"routeinfo"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"routeinfo"},{"name":"routeinfo"}],"output":{"name":"bool"}}],[11,"handle","","",0,{"inputs":[{"name":"router"},{"name":"request"},{"name":"response"}],"output":null}],[11,"new","","Construct a new Router to maintain the routes and their handler\nfunctions.",0,{"inputs":[],"output":{"name":"router"}}],[11,"add_route","","Add a route to the router and give it a function to call when the route\nis matched against. You can call this explicitly or use the convenience\nmethods defined below.",0,{"inputs":[{"name":"router"},{"name":"method"},{"name":"str"},{"name":"h"}],"output":null}],[11,"options","","A convenience method for OPTIONS requests.",0,{"inputs":[{"name":"router"},{"name":"str"},{"name":"h"}],"output":null}],[11,"get","","A convenience method for GET requests.",0,{"inputs":[{"name":"router"},{"name":"str"},{"name":"h"}],"output":null}],[11,"post","","A convenience method for POST requests.",0,{"inputs":[{"name":"router"},{"name":"str"},{"name":"h"}],"output":null}],[11,"put","","A convenience method for PUT requests.",0,{"inputs":[{"name":"router"},{"name":"str"},{"name":"h"}],"output":null}],[11,"delete","","A convenience method for DELETE requests.",0,{"inputs":[{"name":"router"},{"name":"str"},{"name":"h"}],"output":null}],[11,"finalize","","This function ensures that a valid `RegexSet` could be made from the route\nvector that was built while using the functions that add routes. It\nrequires that there exist at least one route so that the RegexSet can be\nsuccessfully constructed.",0,{"inputs":[{"name":"router"}],"output":{"name":"result"}}],[11,"add_not_found","","Add a function to handle routes that get no matches.",0,{"inputs":[{"name":"router"},{"name":"notfoundfn"}],"output":null}]],"paths":[[3,"Router"],[3,"RouteInfo"]]};
initSearch(searchIndex);
